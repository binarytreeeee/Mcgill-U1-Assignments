Jonathan Fokkan
260447938
COMP250
Assignment 3
Question 2

2.
    (b)
        Prove that there are 2^k paths from root to leaves, for a full binary tree of depth k.
        Base Case:
        depth 1:
        3 nodes     0
                   / \
                  0   0
        Let P = paths
        P = P_left + P_right
        P_left = 1
        P_right = 1
        2^1 = P_left+P_right =2 (correct)
        
        Depth 2:
        7 nodes
                    0
                   / \
                  0   0
                 / \ / \
                0  0 0  0
        P_left = P1 = P1_left + P1_right
        P1_left = 1
        P1_right = 1
        P_left = 2
        P_right = P2= P2_left + P2_right
        .
        . similarly
        .
        P_right = 2

        2^2 = P =  4 (correct)

        Induction step:
        Assume there are 2^k paths for binary trees of depth up to k.

            0
           / \
          ▲   ▲
        for depth k+1
        P = P_left + P_right
        P_left = 2^(k + 1 -1)          by induction hypothesis
        P_right = 2^(k + 1 -1)           by induction hypothesis
        P = 2^(k) + 2^(k)
          = 2^(k + 1)

    (c)
        Prove that a binary tree in which each node has either 0 or 2 successors has an odd number of nodes.
        Base Case:
            0
        1 node
        Odd number of nodes.

            0
           / \
          0   0
          3 nodes
          Odd number of nodes.

        Induction step:
        let N be the number of nodes in a tree.
        Assume:
        N = N_left + N_right + 1  is odd
            holds for up to N.

        N+2 is odd. N can only increase by a multiple of 2.
        The sum of odd and even numbers is odd.



3.
    Original:

                    15
                   /  \
                  7   18  
                 / \    \
                3  12   23
                   /
                  10

    Insert(21):

                    15
                   /  \
                  7   18  
                 / \    \
                3  12   23
                   /    /
                  10   21

    Insert(16):

                    15
                   /  \
                  7   18  
                 / \  / \
                3  12 16 23
                   /    /
                  10   21

    Insert(2):

                    15
                   /  \
                  7   18  
                 / \  / \
                3  12 16 23
               /   /    /
              2   10   21
    
    remove(18):
                    15
                   /  \
                  7   16
                 / \    \
                3  12   23
               /   /    /
              2   10   21
